--------------------------------------------------------
--  File created - Salý-Aralýk-25-2018   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence DEPT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "GAZI"."DEPT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 201 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table DOKTOR
--------------------------------------------------------

  CREATE TABLE "GAZI"."DOKTOR" 
   (	"DOKTORSICIL" VARCHAR2(6 BYTE), 
	"DOKTORADI" VARCHAR2(30 BYTE), 
	"HASTANENO" VARCHAR2(6 BYTE), 
	"SERVISNO" VARCHAR2(6 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HASTANE
--------------------------------------------------------

  CREATE TABLE "GAZI"."HASTANE" 
   (	"HASTANENO" VARCHAR2(6 BYTE), 
	"HASTANEADI" VARCHAR2(50 BYTE), 
	"SEHIR" VARCHAR2(30 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table KULLANICIKAYDI
--------------------------------------------------------

  CREATE TABLE "GAZI"."KULLANICIKAYDI" 
   (	"TC" VARCHAR2(11 BYTE), 
	"ISIM" VARCHAR2(30 BYTE), 
	"SOYISIM" VARCHAR2(30 BYTE), 
	"SIGORTA" VARCHAR2(30 BYTE), 
	"KULLANICIADI" VARCHAR2(15 BYTE), 
	"SIFRE" VARCHAR2(15 BYTE), 
	"ANAHTARKELIME" VARCHAR2(15 BYTE), 
	"GIRISSAATI" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"GIRISKONTROL" VARCHAR2(2 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table RANDEVU
--------------------------------------------------------

  CREATE TABLE "GAZI"."RANDEVU" 
   (	"RANDEVUNO" NUMBER, 
	"TC" VARCHAR2(11 BYTE), 
	"SEHIR" VARCHAR2(30 BYTE), 
	"HASTANENO" VARCHAR2(6 BYTE), 
	"SERVISNO" VARCHAR2(6 BYTE), 
	"RANDEVUTARIHI" VARCHAR2(30 BYTE), 
	"GIRISSAATI" TIMESTAMP (6) DEFAULT CURRENT_TIMESTAMP, 
	"DOKTORSICIL" VARCHAR2(6 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table SERVIS
--------------------------------------------------------

  CREATE TABLE "GAZI"."SERVIS" 
   (	"SERVISADI" VARCHAR2(30 BYTE), 
	"SERVISNO" VARCHAR2(6 BYTE), 
	"HASTANENO" VARCHAR2(6 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
REM INSERTING into GAZI.DOKTOR
SET DEFINE OFF;
Insert into GAZI.DOKTOR (DOKTORSICIL,DOKTORADI,HASTANENO,SERVISNO) values ('123','PROF.DR OSMAN SARI','1','1');
Insert into GAZI.DOKTOR (DOKTORSICIL,DOKTORADI,HASTANENO,SERVISNO) values ('321','PROF.DR ENES KIRTAN','2','2');
REM INSERTING into GAZI.HASTANE
SET DEFINE OFF;
Insert into GAZI.HASTANE (HASTANENO,HASTANEADI,SEHIR) values ('1','HACETTEPE TIP FAKULTESI','ANKARA');
Insert into GAZI.HASTANE (HASTANENO,HASTANEADI,SEHIR) values ('2','ANKARA UNIVERSITESI TIP FAKULTESI','ANKARA');
REM INSERTING into GAZI.KULLANICIKAYDI
SET DEFINE OFF;
Insert into GAZI.KULLANICIKAYDI (TC,ISIM,SOYISIM,SIGORTA,KULLANICIADI,SIFRE,ANAHTARKELIME,GIRISSAATI,GIRISKONTROL) values ('52603411608','halil ibrahim','annadinc','BAÐKUR','mr.annadinc','512154','göðebak',to_timestamp('22/12/2018 23:32:07,000000000','DD/MM/RRRR HH24:MI:SS,FF'),'0');
Insert into GAZI.KULLANICIKAYDI (TC,ISIM,SOYISIM,SIGORTA,KULLANICIADI,SIFRE,ANAHTARKELIME,GIRISSAATI,GIRISKONTROL) values ('12345678945','mustafa','erkoç','EMEKLÝ SANDIÐI','mr.erkoc','123456','at',to_timestamp('22/12/2018 23:33:57,000000000','DD/MM/RRRR HH24:MI:SS,FF'),'0');
REM INSERTING into GAZI.RANDEVU
SET DEFINE OFF;
Insert into GAZI.RANDEVU (RANDEVUNO,TC,SEHIR,HASTANENO,SERVISNO,RANDEVUTARIHI,GIRISSAATI,DOKTORSICIL) values ('162','52603411608','ANKARA','1','2','2018-12-26 10:30:00',to_timestamp('24/12/2018 16:22:38,000000000','DD/MM/RRRR HH24:MI:SS,FF'),'123');
Insert into GAZI.RANDEVU (RANDEVUNO,TC,SEHIR,HASTANENO,SERVISNO,RANDEVUTARIHI,GIRISSAATI,DOKTORSICIL) values ('182','12345678945','ANKARA','1','2','2018-12-27 13:30:00',to_timestamp('25/12/2018 12:26:37,000000000','DD/MM/RRRR HH24:MI:SS,FF'),'321');
Insert into GAZI.RANDEVU (RANDEVUNO,TC,SEHIR,HASTANENO,SERVISNO,RANDEVUTARIHI,GIRISSAATI,DOKTORSICIL) values ('164','52603411608','ANKARA','1','2','2018-12-30 11:30:00',to_timestamp('24/12/2018 16:24:07,000000000','DD/MM/RRRR HH24:MI:SS,FF'),'321');
REM INSERTING into GAZI.SERVIS
SET DEFINE OFF;
Insert into GAZI.SERVIS (SERVISADI,SERVISNO,HASTANENO) values ('KBB','1','1');
Insert into GAZI.SERVIS (SERVISADI,SERVISNO,HASTANENO) values ('KBB','2','2');
--------------------------------------------------------
--  DDL for Index DEPT_BIR
--------------------------------------------------------

  CREATE UNIQUE INDEX "GAZI"."DEPT_BIR" ON "GAZI"."RANDEVU" ("RANDEVUNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index KAYITHANDLING
--------------------------------------------------------

  CREATE UNIQUE INDEX "GAZI"."KAYITHANDLING" ON "GAZI"."KULLANICIKAYDI" ("TC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007225
--------------------------------------------------------

  CREATE UNIQUE INDEX "GAZI"."SYS_C007225" ON "GAZI"."DOKTOR" ("DOKTORSICIL") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007215
--------------------------------------------------------

  CREATE UNIQUE INDEX "GAZI"."SYS_C007215" ON "GAZI"."HASTANE" ("HASTANENO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index SYS_C007219
--------------------------------------------------------

  CREATE UNIQUE INDEX "GAZI"."SYS_C007219" ON "GAZI"."SERVIS" ("SERVISNO") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  Constraints for Table DOKTOR
--------------------------------------------------------

  ALTER TABLE "GAZI"."DOKTOR" ADD PRIMARY KEY ("DOKTORSICIL")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "GAZI"."DOKTOR" MODIFY ("SERVISNO" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."DOKTOR" MODIFY ("HASTANENO" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."DOKTOR" MODIFY ("DOKTORADI" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."DOKTOR" MODIFY ("DOKTORSICIL" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table HASTANE
--------------------------------------------------------

  ALTER TABLE "GAZI"."HASTANE" ADD PRIMARY KEY ("HASTANENO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "GAZI"."HASTANE" MODIFY ("SEHIR" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."HASTANE" MODIFY ("HASTANEADI" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."HASTANE" MODIFY ("HASTANENO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table KULLANICIKAYDI
--------------------------------------------------------

  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("GIRISKONTROL" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" ADD CONSTRAINT "KAYITHANDLING" PRIMARY KEY ("TC")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("ANAHTARKELIME" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("SIFRE" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("KULLANICIADI" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("SIGORTA" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("SOYISIM" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("ISIM" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."KULLANICIKAYDI" MODIFY ("TC" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table RANDEVU
--------------------------------------------------------

  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("DOKTORSICIL" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."RANDEVU" ADD CONSTRAINT "DEPT_BIR" PRIMARY KEY ("RANDEVUNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("RANDEVUTARIHI" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("SERVISNO" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("HASTANENO" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("SEHIR" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("TC" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."RANDEVU" MODIFY ("RANDEVUNO" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table SERVIS
--------------------------------------------------------

  ALTER TABLE "GAZI"."SERVIS" ADD PRIMARY KEY ("SERVISNO")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS"  ENABLE;
  ALTER TABLE "GAZI"."SERVIS" MODIFY ("HASTANENO" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."SERVIS" MODIFY ("SERVISNO" NOT NULL ENABLE);
  ALTER TABLE "GAZI"."SERVIS" MODIFY ("SERVISADI" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table DOKTOR
--------------------------------------------------------

  ALTER TABLE "GAZI"."DOKTOR" ADD FOREIGN KEY ("HASTANENO")
	  REFERENCES "GAZI"."HASTANE" ("HASTANENO") ENABLE;
  ALTER TABLE "GAZI"."DOKTOR" ADD FOREIGN KEY ("SERVISNO")
	  REFERENCES "GAZI"."SERVIS" ("SERVISNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table RANDEVU
--------------------------------------------------------

  ALTER TABLE "GAZI"."RANDEVU" ADD CONSTRAINT "KULLANICIRANDEVUHANDLING" FOREIGN KEY ("TC")
	  REFERENCES "GAZI"."KULLANICIKAYDI" ("TC") ENABLE;
  ALTER TABLE "GAZI"."RANDEVU" ADD CONSTRAINT "RANDEVUHANDLING" FOREIGN KEY ("DOKTORSICIL")
	  REFERENCES "GAZI"."DOKTOR" ("DOKTORSICIL") ENABLE;
  ALTER TABLE "GAZI"."RANDEVU" ADD FOREIGN KEY ("HASTANENO")
	  REFERENCES "GAZI"."HASTANE" ("HASTANENO") ENABLE;
  ALTER TABLE "GAZI"."RANDEVU" ADD FOREIGN KEY ("SERVISNO")
	  REFERENCES "GAZI"."SERVIS" ("SERVISNO") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table SERVIS
--------------------------------------------------------

  ALTER TABLE "GAZI"."SERVIS" ADD FOREIGN KEY ("HASTANENO")
	  REFERENCES "GAZI"."HASTANE" ("HASTANENO") ENABLE;
--------------------------------------------------------
--  DDL for Trigger RANDEVUHANDLING
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GAZI"."RANDEVUHANDLING" 
BEFORE INSERT ON RANDEVU 
FOR EACH ROW
DECLARE 
SAYILANSICIL NUMBER;
BEGIN
  SELECT COUNT(DOKTORSICIL) INTO SAYILANSICIL FROM RANDEVU WHERE :NEW.DOKTORSICIL = DOKTORSICIL;
  
    IF (SAYILANSICIL > 30)THEN
    raýse_applýcatýon_error(-20000, 'DOKTORUN 30 DAN FAZLA RANDEVU BULUNMAKTADIR!');
    ELSIF(:new.DOKTORSICIL = :old.DOKTORSICIL AND 
    :new.RANDEVUTARIHI = :old.RANDEVUTARIHI)THEN
      raýse_applýcatýon_error(-20000, 'BU SAATTEKÝ RANDEVU DOLU!');
    
    ELSIF(:new.DOKTORSICIL != :old.DOKTORSICIL AND 
    :new.RANDEVUTARIHI = :old.RANDEVUTARIHI)THEN
      raýse_applýcatýon_error(-20000, 'BU SAATTE BAÞKA DOKTORDA RANDEVUNUZ VAR!');
    
    END IF;
EXCEPTION 
    WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Özel durum oluþtu...');
END;
/
ALTER TRIGGER "GAZI"."RANDEVUHANDLING" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KULLANICIRANDEVUHANDLING
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GAZI"."KULLANICIRANDEVUHANDLING" 
BEFORE INSERT ON RANDEVU 
FOR EACH ROW
DECLARE
SAYILANTC INTEGER;
BEGIN
 
  SELECT COUNT(TC) INTO SAYILANTC FROM RANDEVU WHERE :NEW.TC = TC;
   IF (SAYILANTC > 2)THEN
  raýse_applýcatýon_error(-20000, 'ÝKÝDEN FAZLA RANDEVU ALAMAZSINIZ!');
  
   ELSIF (:new.RANDEVUTARIHI = :old.RANDEVUTARIHI AND 
    :NEW.SERVISNO != :OLD.SERVISNO)THEN
      raýse_applýcatýon_error(-20000, 'BU SAATTE BAÞKA SERVISTE RANDEVUNUZ VAR!');
      
    ELSIF (:new.RANDEVUTARIHI = :old.RANDEVUTARIHI AND 
    :NEW.SEHIR != :OLD.SEHIR)THEN
      raýse_applýcatýon_error(-20000, 'BU SAATTE BAÞKA SEHIRDE RANDEVUNUZ VAR!');
    END IF; 
EXCEPTION 
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Özel durum oluþtu...');
END;
/
ALTER TRIGGER "GAZI"."KULLANICIRANDEVUHANDLING" ENABLE;
--------------------------------------------------------
--  DDL for Trigger KAYITHANDLING
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GAZI"."KAYITHANDLING" 
BEFORE INSERT ON KULLANICIKAYDI
FOR EACH ROW
BEGIN
  IF (:NEW.TC = :OLD.TC )THEN
  raýse_applýcatýon_error(-20000, 'Sisteme bir kez kayit yaptirabilirsiniz!');
  
  END IF;

EXCEPTION 
  WHEN OTHERS THEN
  DBMS_OUTPUT.PUT_LINE('Özel durum oluþtu...');
END;
/
ALTER TRIGGER "GAZI"."KAYITHANDLING" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPT_BIR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "GAZI"."DEPT_BIR" 
BEFORE INSERT ON RANDEVU 
FOR EACH ROW
BEGIN
  SELECT dept_seq.NEXTVAL
  INTO   :new.randevuNo
  FROM   dual;
END;
/
ALTER TRIGGER "GAZI"."DEPT_BIR" ENABLE;
--------------------------------------------------------
--  DDL for Function CUSTOM_AUTH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GAZI"."CUSTOM_AUTH" (p_username in VARCHAR2, p_password in VARCHAR2)
return BOOLEAN
is
  l_password varchar2(4000);
  l_stored_password varchar2(4000);
  l_expires_on date;
  l_count number;
begin
-- First, check to see if the user is in the user table
select count(*) into l_count from demo_users where user_name = p_username;
if l_count > 0 then
  -- First, we fetch the stored hashed password & expire date
  select password, expires_on into l_stored_password, l_expires_on
   from demo_users where user_name = p_username;

  -- Next, we check to see if the user's account is expired
  -- If it is, return FALSE
  if l_expires_on > sysdate or l_expires_on is null then

    -- If the account is not expired, we have to apply the custom hash
    -- function to the password
    l_password := custom_hash(p_username, p_password);

    -- Finally, we compare them to see if they are the same and return
    -- either TRUE or FALSE
    if l_password = l_stored_password then
      return true;
    else
      return false;
    end if;
  else
    return false;
  end if;
else
  -- The username provided is not in the DEMO_USERS table
  return false;
end if;
end;

/
--------------------------------------------------------
--  DDL for Function CUSTOM_HASH
--------------------------------------------------------

  CREATE OR REPLACE FUNCTION "GAZI"."CUSTOM_HASH" (p_username in varchar2, p_password in varchar2)
return varchar2
is
  l_password varchar2(4000);
  l_salt varchar2(4000) := 'EG59FLSCA7UUZ2OQRRAIG2DIFQK363';
begin

-- This function should be wrapped, as the hash algorhythm is exposed here.
-- You can change the value of l_salt or the method of which to call the
-- DBMS_OBFUSCATOIN toolkit, but you much reset all of your passwords
-- if you choose to do this.

l_password := utl_raw.cast_to_raw(dbms_obfuscation_toolkit.md5
  (input_string => p_password || substr(l_salt,10,13) || p_username ||
    substr(l_salt, 4,10)));
return l_password;
end;

/
--------------------------------------------------------
--  DDL for Package HASTANERANDEVU
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "GAZI"."HASTANERANDEVU" AS 
TYPE GIRILEN IS REF CURSOR;

PROCEDURE SP_KULLANICIKAYDI(TC IN KULLANICIKAYDI.TC%TYPE, SIGORTA IN KULLANICIKAYDI.SIGORTA%TYPE, ISIM IN KULLANICIKAYDI.ISIM%TYPE, 
  SOYISIM IN KULLANICIKAYDI.SOYISIM%TYPE,
  KULLANICIADI IN KULLANICIKAYDI.KULLANICIADI%TYPE,
  SIFRE IN KULLANICIKAYDI.SIFRE%TYPE, ANAHTARKELIME IN KULLANICIKAYDI.ANAHTARKELIME%TYPE);

PROCEDURE SP_RANDEVUEKLEME(TC IN KULLANICIKAYDI.TC%TYPE,
  SEHIR IN HASTANE.SEHIR%TYPE, HASTANENO IN HASTANE.HASTANENO%TYPE, SERVISNO IN SERVIS.SERVISNO%TYPE,
  DOKTORSICIL IN DOKTOR.DOKTORSICIL%TYPE, RANDEVUTARIHI IN RANDEVU.RANDEVUTARIHI%TYPE);
  
PROCEDURE SP_RANDEVU(GSEHIR IN HASTANE.SEHIR%TYPE, GHASTANEADI IN HASTANE.HASTANEADI%TYPE, GSERVISADI IN SERVIS.SERVISADI%TYPE,
GDOKTORADI IN DOKTOR.DOKTORADI%TYPE, GRANDEVUTARIHI IN RANDEVU.RANDEVUTARIHI%TYPE, RANDEVUCURSOR OUT GIRILEN);

PROCEDURE SP_KULLANICIGIRIS (GKULLANICIADI IN KULLANICIKAYDI.KULLANICIADI%TYPE,
GSIFRE IN KULLANICIKAYDI.SIFRE%TYPE, DEGISKEN OUT GIRILEN);

PROCEDURE SP_RANDEVUSORGULA(RANDEVUNOSU IN RANDEVU.RANDEVUNO%TYPE, SORGULAYANCURSOR OUT GIRILEN);

PROCEDURE SP_RANDEVUIPTAL(RANDEVUNUMARASI IN RANDEVU.RANDEVUNO%TYPE);
  
PROCEDURE SP_SIFREDEGISTIR(KULLANICIID IN KULLANICIKAYDI.KULLANICIADI%TYPE, GSIFRE IN KULLANICIKAYDI.SIFRE%TYPE);

PROCEDURE SP_SIFREMIUNUTTUM(TCNO IN KULLANICIKAYDI.TC%TYPE, GANAHTARKELIME IN KULLANICIKAYDI.ANAHTARKELIME%TYPE, 
  GSIFRE IN KULLANICIKAYDI.SIFRE%TYPE);

PROCEDURE SP_DOKTOREKLEME(GHASTANEADI IN VARCHAR2, GSERVISADI IN VARCHAR2, GSEHIR IN VARCHAR2, EKLEYENCURSOR OUT GIRILEN);

PROCEDURE SP_HASTANEEKLE(GSEHIR IN HASTANE.SEHIR%TYPE, GETIREN OUT GIRILEN);

PROCEDURE SP_SERVISEKLEME(GHASTANEADI IN HASTANE.HASTANEADI%TYPE, GETIRENCURSOR OUT GIRILEN);

PROCEDURE SP_RANDEVUNOGETIR(TCNO IN KULLANICIKAYDI.TC%TYPE, DOKTORNOSU IN DOKTOR.DOKTORSICIL%TYPE, NOGETIRENCURSOR OUT GIRILEN);

PROCEDURE SP_GIRISKONTROL(GELENID IN KULLANICIKAYDI.KULLANICIADI%TYPE);

PROCEDURE SP_GIRISKONTROL2;
END HASTANERANDEVU;

/
--------------------------------------------------------
--  DDL for Package Body HASTANERANDEVU
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "GAZI"."HASTANERANDEVU" AS

  PROCEDURE SP_KULLANICIKAYDI(TC IN KULLANICIKAYDI.TC%TYPE, SIGORTA IN KULLANICIKAYDI.SIGORTA%TYPE, ISIM IN KULLANICIKAYDI.ISIM%TYPE, 
  SOYISIM IN KULLANICIKAYDI.SOYISIM%TYPE,
  KULLANICIADI IN KULLANICIKAYDI.KULLANICIADI%TYPE,
  SIFRE IN KULLANICIKAYDI.SIFRE%TYPE, ANAHTARKELIME IN KULLANICIKAYDI.ANAHTARKELIME%TYPE) AS
   
  BEGIN
    INSERT INTO KULLANICIKAYDI VALUES(TC, ISIM, SOYISIM, SIGORTA, KULLANICIADI, SIFRE, ANAHTARKELIME, SYSDATE,'0');
    COMMIT;
  END SP_KULLANICIKAYDI;
  
  PROCEDURE SP_RANDEVUEKLEME(TC IN KULLANICIKAYDI.TC%TYPE,
  SEHIR IN HASTANE.SEHIR%TYPE, HASTANENO IN HASTANE.HASTANENO%TYPE, SERVISNO IN SERVIS.SERVISNO%TYPE,
  DOKTORSICIL IN DOKTOR.DOKTORSICIL%TYPE, RANDEVUTARIHI IN RANDEVU.RANDEVUTARIHI%TYPE) AS 
  BEGIN
  INSERT INTO RANDEVU VALUES(DEPT_SEQ.NEXTVAL,TC, SEHIR, HASTANENO, SERVISNO, RANDEVUTARIHI, SYSDATE, DOKTORSICIL);
  COMMIT;
  END SP_RANDEVUEKLEME;

  PROCEDURE SP_RANDEVU(GSEHIR IN HASTANE.SEHIR%TYPE, GHASTANEADI IN HASTANE.HASTANEADI%TYPE, GSERVISADI IN SERVIS.SERVISADI%TYPE,
  GDOKTORADI IN DOKTOR.DOKTORADI%TYPE, GRANDEVUTARIHI IN RANDEVU.RANDEVUTARIHI%TYPE, RANDEVUCURSOR OUT GIRILEN) AS

  BEGIN
      OPEN RANDEVUCURSOR FOR
      
      SELECT H.HASTANENO, S.SERVISNO, D.DOKTORSICIL, K.TC, K.ISIM, K.SOYISIM FROM HASTANE H, SERVIS S, DOKTOR D, KULLANICIKAYDI K
      WHERE GHASTANEADI = H.HASTANEADI
      AND GSERVISADI = S.SERVISADI 
      AND GDOKTORADI = D.DOKTORADI
      AND K.GIRISKONTROL = '1';
 
  END SP_RANDEVU;
 

  PROCEDURE SP_KULLANICIGIRIS (GKULLANICIADI IN KULLANICIKAYDI.KULLANICIADI%TYPE,
  GSIFRE IN KULLANICIKAYDI.SIFRE%TYPE, DEGISKEN OUT GIRILEN) AS
  
  
  BEGIN
      
      OPEN DEGISKEN FOR
      SELECT K.KULLANICIADI, K.SIFRE FROM KULLANICIKAYDI K WHERE K.KULLANICIADI = GKULLANICIADI AND K.SIFRE = GSIFRE;
      
      
      
  END SP_KULLANICIGIRIS;

  PROCEDURE SP_RANDEVUSORGULA(RANDEVUNOSU IN RANDEVU.RANDEVUNO%TYPE, SORGULAYANCURSOR OUT GIRILEN) AS
  
  BEGIN
      --SERVIS S, DOKTOR D, , D.DOKTORADI S.SERVISADI,
      OPEN SORGULAYANCURSOR FOR
      SELECT H.HASTANEADI,  R.RANDEVUTARIHI
       FROM RANDEVU R, HASTANE H, KULLANICIKAYDI K
      WHERE H.HASTANENO = R.HASTANENO 
     -- AND S.SERVISNO = R.SERVISNO
      AND R.RANDEVUNO = RANDEVUNOSU
     -- AND D.DOKTORSICIL = R.DOKTORSICIL
      AND K.GIRISKONTROL = '1' ;
      
      
  END SP_RANDEVUSORGULA;

  PROCEDURE SP_RANDEVUIPTAL(RANDEVUNUMARASI IN RANDEVU.RANDEVUNO%TYPE) AS
 
  BEGIN
    
    DELETE FROM RANDEVU R WHERE  R.RANDEVUNO=RANDEVUNUMARASI AND R.TC = ( SELECT K.TC FROM KULLANICIKAYDI K WHERE K.GIRISKONTROL = '1');
    COMMIT;

   
  END SP_RANDEVUIPTAL;

  PROCEDURE SP_SIFREDEGISTIR(KULLANICIID IN KULLANICIKAYDI.KULLANICIADI%TYPE, GSIFRE IN KULLANICIKAYDI.SIFRE%TYPE) AS
   DEGISTIRENCURSOR GIRILEN;
   YAKALANAN VARCHAR2(15);
  BEGIN
    LOOP
    OPEN DEGISTIRENCURSOR FOR
    SELECT K.KULLANICIADI FROM KULLANICIKAYDI K WHERE KULLANICIADI IN K.KULLANICIADI;
     FETCH DEGISTIRENCURSOR INTO YAKALANAN;
    IF(YAKALANAN = KULLANICIID)THEN
    UPDATE KULLANICIKAYDI K SET K.SIFRE = GSIFRE WHERE YAKALANAN IN K.KULLANICIADI AND K.GIRISKONTROL = '1'; 
    END IF;
    END LOOP;
    CLOSE DEGISTIRENCURSOR;
    COMMIT;
  END SP_SIFREDEGISTIR;

  PROCEDURE SP_SIFREMIUNUTTUM(TCNO IN KULLANICIKAYDI.TC%TYPE, GANAHTARKELIME IN KULLANICIKAYDI.ANAHTARKELIME%TYPE, 
  GSIFRE IN KULLANICIKAYDI.SIFRE%TYPE) AS
   YAKALANAN VARCHAR2(15);
    GUNCELLEYEN GIRILEN;
  BEGIN
     
    OPEN GUNCELLEYEN FOR
    SELECT K.TC FROM KULLANICIKAYDI K WHERE TC IN K.TC;
    FETCH GUNCELLEYEN INTO YAKALANAN;
    IF(YAKALANAN = TCNO)THEN
    UPDATE KULLANICIKAYDI K SET K.SIFRE = GSIFRE WHERE YAKALANAN IN K.TC;
    COMMIT;
    END IF;
    CLOSE GUNCELLEYEN;
    
  END SP_SIFREMIUNUTTUM;
  
  PROCEDURE SP_DOKTOREKLEME(GHASTANEADI IN VARCHAR2, GSERVISADI IN VARCHAR2, GSEHIR IN VARCHAR2, EKLEYENCURSOR OUT GIRILEN) AS 
  BEGIN
    OPEN EKLEYENCURSOR FOR
    SELECT D.DOKTORADI FROM DOKTOR D, HASTANE H, SERVIS S 
    WHERE S.SERVISADI=GSERVISADI
    AND H.HASTANEADI=GHASTANEADI 
    AND H.SEHIR=GSEHIR ;
  END SP_DOKTOREKLEME;
  
  PROCEDURE SP_HASTANEEKLE(GSEHIR IN HASTANE.SEHIR%TYPE, GETIREN OUT GIRILEN) AS 

  BEGIN

    OPEN GETIREN FOR
    SELECT H.HASTANEADI FROM HASTANE H WHERE H.SEHIR = GSEHIR;
 
  END SP_HASTANEEKLE;
  
  PROCEDURE SP_SERVISEKLEME(GHASTANEADI IN HASTANE.HASTANEADI%TYPE, GETIRENCURSOR OUT GIRILEN) AS 
  BEGIN
    OPEN GETIRENCURSOR FOR
    SELECT S.SERVISADI FROM SERVIS S, HASTANE H 
    WHERE  H.HASTANEADI=GHASTANEADI;
  END SP_SERVISEKLEME;
 
 PROCEDURE SP_RANDEVUNOGETIR(TCNO IN KULLANICIKAYDI.TC%TYPE, DOKTORNOSU IN DOKTOR.DOKTORSICIL%TYPE, NOGETIRENCURSOR OUT GIRILEN)AS
 BEGIN
 OPEN NOGETIRENCURSOR FOR
 SELECT R.RANDEVUNO FROM RANDEVU R WHERE TCNO = R.TC AND DOKTORNOSU = R.DOKTORSICIL;
 END SP_RANDEVUNOGETIR;
 
 PROCEDURE SP_GIRISKONTROL(GELENID IN KULLANICIKAYDI.KULLANICIADI%TYPE) AS 

 BEGIN 


 UPDATE KULLANICIKAYDI K SET GIRISKONTROL = '1' WHERE K.KULLANICIADI = GELENID ;
  
  
 COMMIT;
 
 END SP_GIRISKONTROL;
 
 PROCEDURE SP_GIRISKONTROL2 AS 


 BEGIN 

  UPDATE KULLANICIKAYDI SET GIRISKONTROL = '0';

 COMMIT;
 
 END SP_GIRISKONTROL2;


END HASTANERANDEVU;

/
